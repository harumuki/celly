name: Build and deploy

on:
  push:
    branches:
      - master
    paths:
      - 'content/**'
      - 'template/**'
      - 'package-lock.json'
      - '.ecomplus.cd.json'
      - '.github/build-and-deploy'

jobs:
  build:
    name: Build Storefront
    runs-on: ubuntu-latest
    if: |
      github.event.head_commit.message != 'Initial commit' &&
      !contains(github.event.head_commit.message, '[skip ci]')
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    outputs:
      to_firebase: ${{ steps.check_firebase.outputs.set }}
      isg_enum: ${{ steps.partial_build.outputs.isg }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check if deploying to Firebase
        run: |
          if [ -z ${FIREBASE_TOKEN+x} ] || [ ! -f .firebaserc ] || [ ! -f firebase.json ]; then
            echo "::set-output name=set::0";
          else
            echo "::set-output name=set::1";
          fi
        id: check_firebase

      - name: Install dependencies
        run: npm ci --only=production

      - name: Run build
        if: steps.check_firebase.outputs.set == 0
        run: npm run build

      - name: Push to branch dist to trigger deploy
        if: steps.check_firebase.outputs.set == 0
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: dist
          FOLDER: dist
          CLEAN: true

      - name: Check last changed files
        if: steps.check_firebase.outputs.set == 1
        uses: lots0logs/gh-action-get-changed-files@2.1.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        id: changed_files

      - name: Run partial build
        if: steps.check_firebase.outputs.set == 1
        env:
          CHANGED_FILES: ${{ steps.changed_files.outputs.all }}
        run: |
          IS_ECOMPLUS_CD=$(node -p \
            "const f = JSON.parse('${CHANGED_FILES}'); f.length === 1 && f[0] === '.ecomplus.cd.json'");
          if [ $IS_ECOMPLUS_CD != false ]; then
            BUILD_SLUG=$(node -p "require('./.ecomplus.cd.json').slug || false");
            if [ $BUILD_SLUG != false ]; then
              npm run build -- --prerender=$BUILD_SLUG --no-bundler;
              echo "::set-output name=isg::2";
            else
              npm run build -- --prerender=index,app/index --prerender-limit=20 --no-bundler;
              echo "::set-output name=isg::1";
            fi
          else
            npm run build -- --prerender=index,app/index --prerender-limit=40;
            echo "::set-output name=isg::0";
          fi
        id: partial_build

      - name: Download cached output
        if: steps.check_firebase.outputs.set == 1 && steps.partial_build.outputs.isg != 0
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: cache

      - name: Merge cache with current build
        if: steps.check_firebase.outputs.set == 1 && steps.partial_build.outputs.isg != 0
        continue-on-error: true
        run: |
          cp -rn cache/* dist/
          cp -r cache/.* dist/

      - name: Copy bundles data to output
        if: steps.check_firebase.outputs.set == 1
        run: cp -n .*.json dist/

      - name: Archive compiled assets and views
        if: steps.check_firebase.outputs.set == 1
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

      - name: Config Git and check diff
        run: |
          git config --local user.email 'action@github.com'
          git config --local user.name 'GitHub Action'
          git add content template
          (git diff-index --quiet HEAD && echo "::set-output name=diff::0") || echo "::set-output name=diff::1"
        id: git_diff

      - name: Commit local file changes
        if: steps.git_diff.outputs.diff == 1
        run: |
          git commit -m 'chore: update template default content [skip ci]'

      - name: Push changes
        if: steps.git_diff.outputs.diff == 1
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master

  deploy:
    needs: build
    name: Deploy to Firebase
    runs-on: ubuntu-latest
    if: needs.build.outputs.to_firebase == 1

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Node
        if: needs.build.outputs.isg_enum == 0
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Download build output
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Copy built bundles data
        run: cp -n dist/.*.json ./

      - name: Deploy Firebase Hosting
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Cache dependencies
        if: needs.build.outputs.isg_enum == 0
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install functions dependencies
        if: needs.build.outputs.isg_enum == 0
        run: cd functions && npm ci --only=production --no-optional && cd ..

      - name: Deploy to Firebase
        if: needs.build.outputs.isg_enum == 0
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
